name: Auto Update TOTO Result

on:
  schedule:
    - cron: '0 1 * * 1,4'  # Every Monday and Thursday at 1:00am UTC
  workflow_dispatch:        # Also allow manual trigger

jobs:
  update:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Allow the workflow to write to the repository

    steps:
      # ✅ STEP 1: Checkout your repo so the script & CSV are accessible
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # ✅ STEP 2: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      # ✅ STEP 3: Install dependencies (robust approach)
      - name: Install dependencies
        run: |
          echo "� Running robust dependency installation..."
          
          # Method 1: Try the fix script
          if [ -f fix-dependencies.cjs ]; then
            echo "🎯 Using dependency fixer script..."
            if node fix-dependencies.cjs; then
              echo "✅ Dependency fixer succeeded"
            else
              echo "⚠️ Dependency fixer failed, trying manual approach..."
            fi
          fi
          
          # Method 2: Fallback manual installation
          echo "🔄 Verifying installation..."
          if ! node -e "require('node-fetch'); require('cheerio')" 2>/dev/null; then
            echo "� Installing critical dependencies manually..."
            npm install node-fetch@2.7.0 cheerio@1.0.0-rc.12 --no-optional --no-audit --force
          fi
          
          # Final verification
          echo "🧪 Final verification..."
          node -e "
            try {
              const fetch = require('node-fetch');
              const cheerio = require('cheerio');
              console.log('✅ node-fetch:', typeof fetch === 'function' ? 'OK' : 'ERROR');
              console.log('✅ cheerio:', typeof cheerio.load === 'function' ? 'OK' : 'ERROR');
              console.log('🎉 All dependencies verified successfully!');
            } catch (err) {
              console.log('💥 Verification failed:', err.message);
              process.exit(1);
            }
          "
          echo "✅ Dependencies installation completed"

      # ✅ STEP 4: Debug environment (helps troubleshoot issues)
      - name: Debug environment
        run: |
          echo "🔍 Environment debugging..."
          node --version
          npm --version
          pwd
          ls -la
          echo "📄 CSV current state:"
          head -3 totoResult.csv || echo "CSV read failed"

      # ✅ STEP 5: Run your TOTO update script
      - name: Run update script
        run: |
          echo "🎯 Running TOTO update script..."
          node updateTotoCSV.cjs
          echo "✅ Update script completed"

      # ✅ STEP 6: Check if CSV file was modified
      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "📝 Changes detected in repository"
            echo "📊 Git status:"
            git status --porcelain
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "📋 No changes detected"
          fi

      # ✅ STEP 7: Commit & push if the CSV has changed
      - name: Commit and push if changed
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          echo "🔄 Committing and pushing changes..."
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add totoResult.csv
          git commit -m "🎯 Auto update TOTO results: $(date +'%Y-%m-%d %H:%M:%S UTC')"
          git push
          echo "✅ Changes pushed to repository"

      # ✅ STEP 8: Summary
      - name: Summary
        run: |
          echo "🎉 TOTO update workflow completed successfully!"
          if [ "${{ steps.verify-changed-files.outputs.changed }}" == "true" ]; then
            echo "📊 CSV file was updated with new results"
            echo "🔄 Website will refresh automatically"
          else
            echo "📋 No new results found - CSV file unchanged"
            echo "💡 This is normal if no new TOTO draw occurred"
          fi
          echo "📈 Current CSV state:"
          head -2 totoResult.csv || echo "Could not read CSV"
