name: Update TOTO Results

on:
  schedule:
    # Run every day at 10 PM SGT (14:00 UTC)
    - cron: '0 14 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-results:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        npm init -y
        npm install axios cheerio
    
    - name: Fetch and update TOTO results
      run: |
        node << 'EOF'
        const fs = require('fs');
        const axios = require('axios');
        const cheerio = require('cheerio');
        
        async function fetchTotoResults() {
          try {
            console.log('Fetching TOTO results...');
            
            // Singapore Pools website scraping (since API might not be public)
            const response = await axios.get('https://www.singaporepools.com.sg/en/product/sr/Pages/toto_results.aspx');
            const $ = cheerio.load(response.data);
            
            // Parse the latest result (this selector might need adjustment)
            const resultText = $('.winning-numbers').first().text() || 
                              $('.result-number').first().text() ||
                              $('[class*="number"]').first().text();
            
            if (!resultText) {
              throw new Error('Could not find TOTO results on page');
            }
            
            // Extract numbers (adjust regex as needed)
            const numbers = resultText.match(/\d+/g);
            if (!numbers || numbers.length < 7) {
              throw new Error('Invalid result format');
            }
            
            const winningNumbers = numbers.slice(0, 6).map(n => parseInt(n));
            const additionalNumber = parseInt(numbers[6]);
            
            // Read current CSV
            const csvPath = './totoResult.csv';
            const csvData = fs.readFileSync(csvPath, 'utf8');
            const lines = csvData.trim().split('\n');
            
            // Create new result line
            const newLine = `${winningNumbers.join(',')},${additionalNumber}`;
            
            // Check if result already exists
            if (lines[0] === newLine) {
              console.log('Result already exists in CSV');
              return;
            }
            
            // Add new result at the beginning
            const updatedCsv = `${newLine}\n${csvData}`;
            
            // Write back to file
            fs.writeFileSync(csvPath, updatedCsv);
            
            console.log('CSV updated with new result:', newLine);
            
            // Set output for commit message
            process.env.NEW_RESULT = newLine;
            
          } catch (error) {
            console.error('Error fetching TOTO results:', error.message);
            process.exit(1);
          }
        }
        
        fetchTotoResults();
        EOF
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add totoResult.csv
        git commit -m "Update TOTO results: $(date '+%Y-%m-%d %H:%M:%S')"
        git push
